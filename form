import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class form extends JFrame {

    private JPanel panel;
    private JTable table;
    private JButton addButton;
    private JButton deleteButton;
    private DefaultTableModel model;
    private ArrayList<String[]> contacts;

    public form() {
        setTitle("Phonebook");
        setSize(500, 400);
        setContentPane(panel);
        setVisible(true);

        model = new DefaultTableModel(new String[]{"ID", "Name", "Phone"}, 0);
        table.setModel(model);

        updateTable();
        setVisible(true);


        contacts = connect.executeQuery("SELECT * FROM phonebooksc.contacts ");


        table.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()) {
            private String oldValue;

            @Override
            public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {

                oldValue = (value != null) ?
                        value.toString() : "";

                return super.getTableCellEditorComponent(table, value, isSelected, row, column); 
            }

            @Override
            public boolean stopCellEditing() {
                String newValue = getCellEditorValue().toString();

                int row = table.getEditingRow();
                int column = table.getEditingColumn();

                String columnName = table.getColumnName(column);
                String id = table.getValueAt(row, 0).toString();


                if (!newValue.equals(oldValue)) {
                    connect.updateContact(id, columnName, newValue);
                    System.out.println("Updated contact with ID: " + id);
                }

                return super.stopCellEditing();
            }
        });

        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String name = JOptionPane.showInputDialog("Name:");
                String phone = JOptionPane.showInputDialog("Phone:");

                if (name != null && phone != null && !name.isEmpty() && !phone.isEmpty()) {
                    connect.addContact(name, phone);
                    updateTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Enter complete values!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int selectedRow = table.getSelectedRow();

                if (selectedRow >= 0 && selectedRow < model.getRowCount()) {
                            String id = table.getValueAt(selectedRow, 0).toString();
                            connect.deleteContact(id);
                            DefaultTableModel model = (DefaultTableModel) table.getModel();
                            model.removeRow(selectedRow);

                            System.out.println("Deleted contact with ID: " + id);
                        } else {
                            System.out.println("Please select a row from the table.");
                        }
            }
        });

            }

            private void updateTable() {
        model.setRowCount(0);
        ArrayList<String[]> contacts = connect.executeQuery("SELECT * FROM contacts");

        if (contacts.isEmpty()) {
                    System.out.println("No contacts found");
                }

        for (String[] contact : contacts) {
            model.addRow(contact);
        }
    }

}
